{"version":3,"sources":["day/d3.module.css","day/d2.module.css","images/innovationStudio-logo.svg","images/innovationStudio-logo-white.svg","images/metal.svg","images/wood.svg","images/water.svg","images/fire.svg","images/earth.svg","P5.js","day/d3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","c1","c2","Component","D3","style","height","className","styles","topWrap","logo","src","require","fiveElements","marquee","top","bot","botWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,QAAU,oBAAoB,KAAO,iBAAiB,aAAe,yBAAyB,QAAU,oBAAoB,IAAM,gBAAgB,IAAM,gBAAgB,QAAU,sB,gBCApMD,EAAOC,QAAU,CAAC,QAAU,oBAAoB,QAAU,oBAAoB,SAAW,uB,iBCDzFD,EAAOC,QAAU,IAA0B,mD,iHCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,6ECIvCC,EAAIC,E,2FAEwBC,Y,qCCDjB,SAASC,IACpB,OACI,yBAAKC,MAAO,CAAEC,OAAQ,UAClB,yBAAKC,UAAWC,IAAOC,SACnB,yBAAKF,UAAWC,IAAOE,KAAMC,IAAKC,EAAQ,MAC1C,yBAAKL,UAAWC,IAAOK,cACnB,yBAAKF,IAAKC,EAAQ,MAClB,yBAAKD,IAAKC,EAAQ,MAClB,yBAAKD,IAAKC,EAAQ,MAClB,yBAAKD,IAAKC,EAAQ,MAClB,yBAAKD,IAAKC,EAAQ,QAI1B,yBAAKL,UAAWC,IAAOM,SACnB,yBAAKP,UAAWC,IAAOO,KACnB,0KACA,2KAEJ,yBAAKR,UAAWC,IAAOQ,KACnB,uGAA0B,wCAA1B,2EAA8D,wCAA9D,2EAAkG,wCAAlG,2EAAsI,yCACtI,uGAA0B,wCAA1B,2EAA8D,wCAA9D,2EAAkG,wCAAlG,2EAAsI,2CAG9I,wBAAIT,UAAWC,IAAOS,SAClB,6BAGA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,kCACA,kCACA,kCACA,kCACA,oC,YC1BDC,MARf,WACE,OACE,yBAAKX,UAAU,OACb,kBAACH,EAAD,QCFce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9d626cbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topWrap\":\"d3_topWrap__3jB_M\",\"logo\":\"d3_logo__2KF_C\",\"fiveElements\":\"d3_fiveElements__3R7E1\",\"marquee\":\"d3_marquee__1ntzq\",\"bot\":\"d3_bot__3LiaO\",\"top\":\"d3_top__2eYzx\",\"botWrap\":\"d3_botWrap__2mHAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topWrap\":\"d2_topWrap__3ftuj\",\"botWrap\":\"d2_botWrap__36RrM\",\"gradient\":\"d2_gradient__gh9Un\"};","module.exports = __webpack_public_path__ + \"static/media/innovationStudio-logo.ef7cd7c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/innovationStudio-logo-white.5093a337.svg\";","module.exports = __webpack_public_path__ + \"static/media/metal.6dcd2aa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/wood.f5667d89.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.01ba79d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.0504f0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/earth.7e3a7ab7.svg\";","import React, { Component } from \"react\";\nimport Sketch from \"react-p5\";\nimport './P5.css'\n\nlet c1, c2\n\nexport default class P5 extends Component {\n    // mousePressed = p5 => {\n    //     p5.noLoop();\n    // };\n\n    // mouseReleased = p5 => {\n    //     p5.loop();\n    // };\n\n    // x = 50;\n    // y = 50;\n\n    windowResized = p5 => {\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight)\n    };\n\n    setup = (p5, canvasParentRef) => {\n        p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef); // use parent to render canvas in this ref (without that p5 render this canvas outside your component)\n        c1 = p5.color(255, 204, 0);\n        c2 = p5.color(255);\n\n    };\n\n\n    draw = p5 => {\n        const dim = Math.max(p5.width, p5.height);\n\n        // Black background\n        // p5.background(0);\n        function setGradient(c1, c2) {\n            p5.noFill()\n            for (let y = 0; y < p5.height; y++) {\n                let inter = p5.map(y, 0, p5.height, 0, 1);\n                let c = p5.lerpColor(c1, c2, inter);\n                p5.stroke(c);\n                p5.line(0, y, p5.width, y)\n            }\n        }\n        setGradient(c1, c2)\n        p5.noFill();\n        p5.stroke(255);\n        p5.strokeCap(p5.ROUND);\n        p5.strokeWeight(dim * 0.005);\n\n        const gridSize = 20;\n        const margin = dim * 0.01;\n        const innerWidth = p5.width - margin * 2;\n\n        const cellSize = innerWidth / gridSize;\n\n\n        const time = p5.millis() / 1000 / 2;\n\n        for (let y = 0; y < gridSize; y++) {\n            for (let x = 0; x < gridSize; x++) {\n                const u = gridSize <= 1 ? 0.5 : x / (gridSize - 1);\n                const v = gridSize <= 1 ? 0.5 : y / (gridSize - 1);\n\n                const px = p5.lerp(margin, p5.width - margin, u);\n                const py = p5.lerp(margin, p5.height - margin, v);\n\n                const rotation = p5.sin(time + u * p5.PI * 0.25) * p5.PI;\n                const lineSize = p5.sin(time + v * p5.PI) * 0.5 + 0.5;\n                segment(px, py, cellSize * lineSize, rotation);\n            }\n        }\n\n        function segment(x, y, length, angle = 0) {\n            const r = length / 2;\n            const u = Math.cos(angle);\n            const v = Math.sin(angle);\n            p5.line(x - u * r, y - v * r, x + u * r, y + v * r);\n        }\n\n\n        // NOTE: Do not use setState in draw function or in functions that is executed in draw function... pls use normal variables or class properties for this purposes\n    };\n\n    render() {\n        return <Sketch setup={this.setup} draw={this.draw} mousePressed={this.mousePressed} windowResized={this.windowResized} mouseReleased={this.mouseReleased} />;\n    }\n}","import React from 'react';\nimport styles from './d3.module.css'\nimport { motion } from \"framer-motion\"\n\n\nexport default function D3() {\n    return (\n        <div style={{ height: '100vh' }}>\n            <div className={styles.topWrap}>\n                <img className={styles.logo} src={require('../images/innovationStudio-logo-white.svg')} />\n                <div className={styles.fiveElements}>\n                    <img src={require('../images/metal.svg')} />\n                    <img src={require('../images/wood.svg')} />\n                    <img src={require('../images/water.svg')} />\n                    <img src={require('../images/fire.svg')} />\n                    <img src={require('../images/earth.svg')} />\n\n                </div>\n            </div>\n            <div className={styles.marquee}>\n                <div className={styles.top}>\n                    <h3>&emsp;VISA INNOVATION STUDIO BEIJING. INNOVATE WITH VISA. Discover, design and develop the future of commerce and payments together.&emsp;</h3>\n                    <h3>&emsp;VISA INNOVATION STUDIO BEIJING. INNOVATE WITH VISA. Discover, design and develop the future of commerce and payments together.&emsp;</h3>\n                </div>\n                <div className={styles.bot}>\n                    <h1>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span></h1>\n                    <h1>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span>&emsp;欢迎各位同事莅临参观&emsp;<span>⁕</span></h1>\n                </div>\n            </div>\n            <ul className={styles.botWrap}>\n                <li>\n                    {/* <img src={require('../images/old/fire.svg')} /> */}\n                </li>\n                <li>2</li>\n                <li>3</li>\n                <li>4</li>\n                <li>5</li>\n                <li>6</li>\n                <li>7</li>\n                <li>8</li>\n                <li>9</li>\n                <li>10</li>\n                <li>11</li>\n                <li>12</li>\n                <li>13</li>\n                <li>14</li>\n            </ul>\n        </div >\n    )\n}","import React from 'react';\nimport P5 from './P5'\nimport D1 from './day/d1'\nimport D2 from './day/d2'\nimport D3 from './day/d3'\n\n\nimport './reset.css';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <D3 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}